const { Stack, SecretValue } = require('@aws-cdk/core');

const { CdkPipeline, SimpleSynthAction } = require('@aws-cdk/pipelines');

const codepipeline = require('@aws-cdk/aws-codepipeline');
const codepipeline_actions = require('@aws-cdk/aws-codepipeline-actions');

const path = require("path");
const yaml = require("js-yaml");
const utilities = require(path.join(__dirname, "../utilities.js")); // Modullo Utilities

class ModulloCreatePipelineAwsStack extends Stack {
  /**
   *
   * @param {cdk.Construct} scope
   * @param {string} id
   * @param {cdk.StackProps=} props
   */
  constructor(scope, id, props) {
    super(scope, id, props);

    // The code that defines your stack goes here
    (async function(){
      let modulloParamsPath = path.join(__dirname, `modullo-params.yaml`); // Autogenerated modullo parameters

      let modulloParamsExists = await utilities.file_exists(modulloParamsPath);
      if (modulloParamsExists) {
        let modulloParams = await utilities.readFile(options, "yaml", modulloParamsPath);
        //modulloParams.email;

        const sourceArtifact = new codepipeline.Artifact();
        const cloudAssemblyArtifact = new codepipeline.Artifact();
    
        const pipeline = new CdkPipeline(this, 'Pipeline', {
          pipelineName: modulloParams["pipeline-name"],
          cloudAssemblyArtifact,
    
          sourceAction: new codepipeline_actions.GitHubSourceAction({
            actionName: 'GitHub',
            output: sourceArtifact,
            oauthToken: SecretValue.secretsManager('modullo-pipeline-github'),
            trigger: codepipeline_actions.GitHubTrigger.POLL,
            // Replace these with your actual GitHub project info
            owner: 'olawoye',
            repo: 'test-nodejs'
          }),
    
          synthAction: SimpleSynthAction.standardNpmSynth({
            sourceArtifact,
            cloudAssemblyArtifact,
    
            // Use this if you need a build step (if you're not using ts-node
            // or if you have TypeScript Lambdas that need to be compiled).
            buildCommand: modulloParams["pipeline-build-command"]
          })
        });


      }
    })()

  }
}

module.exports = { ModulloCreatePipelineAwsStack }
